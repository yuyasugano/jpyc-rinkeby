{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/Token.sol",
    "8": "contracts/utils/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        954
      ]
    },
    "id": 955,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 692,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "contracts/utils/SafeMath.sol",
        "file": "./utils/SafeMath.sol",
        "id": 693,
        "nodeType": "ImportDirective",
        "scope": 955,
        "sourceUnit": 1151,
        "src": "58:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 694,
          "nodeType": "StructuredDocumentation",
          "src": "90:161:3",
          "text": "@title Bare-bones Token implementation\n@notice Based on the ERC-20 token standard as defined at\nhttps://eips.ethereum.org/EIPS/eip-20"
        },
        "fullyImplemented": true,
        "id": 954,
        "linearizedBaseContracts": [
          954
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 697,
            "libraryName": {
              "contractScope": null,
              "id": 695,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1150,
              "src": "280:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1150",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "274:27:3",
            "typeName": {
              "id": 696,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "293:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 699,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 954,
            "src": "307:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 698,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "307:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 701,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 954,
            "src": "333:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 700,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "333:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 703,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 954,
            "src": "357:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 702,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "357:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 705,
            "mutability": "mutable",
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 954,
            "src": "386:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 704,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "386:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 709,
            "mutability": "mutable",
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 954,
            "src": "419:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 708,
              "keyType": {
                "id": 706,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "427:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "419:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 707,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "438:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 715,
            "mutability": "mutable",
            "name": "allowed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 954,
            "src": "461:55:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 714,
              "keyType": {
                "id": 710,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "469:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "461:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 713,
                "keyType": {
                  "id": 711,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "480:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 712,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "499:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 723,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 717,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 723,
                  "src": "538:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 723,
                  "src": "552:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 721,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 723,
                  "src": "564:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:41:3"
            },
            "src": "523:56:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 731,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 731,
                  "src": "599:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 727,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 731,
                  "src": "614:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 729,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 731,
                  "src": "631:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "598:47:3"
            },
            "src": "584:62:3"
          },
          {
            "body": {
              "id": 775,
              "nodeType": "Block",
              "src": "806:227:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 742,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "816:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 743,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 733,
                      "src": "823:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "816:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "816:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 746,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "838:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 747,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "847:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "838:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "838:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 750,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "864:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 751,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "875:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "864:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "864:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 754,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "894:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 755,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "908:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "894:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "894:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 758,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "930:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 761,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 759,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "939:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "939:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "930:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 762,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "953:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "930:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "930:35:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "997:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "989:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 766,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "989:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "989:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 770,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1001:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1001:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 772,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "1013:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 765,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "980:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "980:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 774,
                  "nodeType": "EmitStatement",
                  "src": "975:51:3"
                }
              ]
            },
            "documentation": null,
            "id": 776,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 776,
                  "src": "673:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 776,
                  "src": "702:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 776,
                  "src": "733:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 776,
                  "src": "760:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "663:123:3"
            },
            "returnParameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "806:0:3"
            },
            "scope": 954,
            "src": "652:381:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 788,
              "nodeType": "Block",
              "src": "1270:40:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 784,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "1287:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 786,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 785,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "1296:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1287:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 783,
                  "id": 787,
                  "nodeType": "Return",
                  "src": "1280:23:3"
                }
              ]
            },
            "documentation": {
              "id": 777,
              "nodeType": "StructuredDocumentation",
              "src": "1039:161:3",
              "text": "@notice Getter to check the current balance of an address\n@param _owner Address to query the balance of\n@return Token balance"
            },
            "functionSelector": "70a08231",
            "id": 789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 789,
                  "src": "1224:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1223:16:3"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 789,
                  "src": "1261:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1260:9:3"
            },
            "scope": 954,
            "src": "1205:105:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "1740:49:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 799,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "1757:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 801,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 800,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "1765:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1757:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 803,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 802,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 794,
                      "src": "1773:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1757:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 798,
                  "id": 804,
                  "nodeType": "Return",
                  "src": "1750:32:3"
                }
              ]
            },
            "documentation": {
              "id": 790,
              "nodeType": "StructuredDocumentation",
              "src": "1316:286:3",
              "text": "@notice Getter to check the amount of tokens that an owner allowed to a spender\n@param _owner The address which owns the funds\n@param _spender The address which will spend the funds\n@return The amount of tokens still available for the spender"
            },
            "functionSelector": "dd62ed3e",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 806,
                  "src": "1635:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 806,
                  "src": "1659:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1625:56:3"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 806,
                  "src": "1727:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1726:9:3"
            },
            "scope": 954,
            "src": "1607:182:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 834,
              "nodeType": "Block",
              "src": "2553:129:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 816,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "2563:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 820,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 817,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2571:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2571:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2563:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 821,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 819,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "2583:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2563:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 822,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "2595:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2563:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "2563:38:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2625:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2625:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 828,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "2637:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 829,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "2647:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 825,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "2616:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2616:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 831,
                  "nodeType": "EmitStatement",
                  "src": "2611:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2671:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 815,
                  "id": 833,
                  "nodeType": "Return",
                  "src": "2664:11:3"
                }
              ]
            },
            "documentation": {
              "id": 807,
              "nodeType": "StructuredDocumentation",
              "src": "1795:680:3",
              "text": "@notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n@dev Beware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.\n@return Success boolean"
            },
            "functionSelector": "095ea7b3",
            "id": 835,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 835,
                  "src": "2497:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 835,
                  "src": "2515:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2496:34:3"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 835,
                  "src": "2547:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2546:6:3"
            },
            "scope": 954,
            "src": "2480:202:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 882,
              "nodeType": "Block",
              "src": "2814:224:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 846,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 709,
                            "src": "2832:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 848,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 847,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "2841:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2832:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 849,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "2851:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2832:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:22:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2824:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2824:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "2892:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 856,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 855,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "2901:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2892:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 861,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "2930:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 857,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 709,
                            "src": "2910:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 858,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "2919:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2910:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1008,
                        "src": "2910:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2910:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2892:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 865,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "2947:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 867,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 866,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "2956:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2947:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 872,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "2981:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 868,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 709,
                            "src": "2963:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 870,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 869,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "2972:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2963:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 982,
                        "src": "2963:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2963:25:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2947:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "2947:41:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 877,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "3012:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 878,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "3019:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 879,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "3024:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 876,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "3003:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3003:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "EmitStatement",
                  "src": "2998:33:3"
                }
              ]
            },
            "documentation": {
              "id": 836,
              "nodeType": "StructuredDocumentation",
              "src": "2688:49:3",
              "text": "shared logic for transfer and transferFrom "
            },
            "id": 883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 883,
                  "src": "2761:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 883,
                  "src": "2776:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 883,
                  "src": "2789:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2760:44:3"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2814:0:3"
            },
            "scope": 954,
            "src": "2742:296:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 902,
              "nodeType": "Block",
              "src": "3313:72:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 894,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3333:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3333:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 896,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "3345:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 897,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "3350:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 893,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "3323:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3323:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "3323:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3374:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 892,
                  "id": 901,
                  "nodeType": "Return",
                  "src": "3367:11:3"
                }
              ]
            },
            "documentation": {
              "id": 884,
              "nodeType": "StructuredDocumentation",
              "src": "3044:195:3",
              "text": "@notice Transfer tokens to a specified address\n@param _to The address to transfer to\n@param _value The amount to be transferred\n@return Success boolean"
            },
            "functionSelector": "a9059cbb",
            "id": 903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 903,
                  "src": "3262:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3262:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 903,
                  "src": "3275:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3261:29:3"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 903,
                  "src": "3307:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3306:6:3"
            },
            "scope": 954,
            "src": "3244:141:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 952,
              "nodeType": "Block",
              "src": "3827:225:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 916,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "3845:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 918,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 917,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "3853:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3845:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 921,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 919,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3860:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3860:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3845:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 922,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "3875:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3845:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3883:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3837:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3837:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "3837:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 927,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "3918:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 931,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 928,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 906,
                          "src": "3926:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3918:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 932,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 929,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3933:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3933:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3918:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 940,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "3978:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 933,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "3947:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 935,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 934,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "3955:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3947:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 938,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 936,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3962:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3962:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3947:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1008,
                        "src": "3947:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3947:38:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3918:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:67:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 945,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "4005:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 946,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "4012:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 947,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "4017:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 944,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "3995:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4041:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 914,
                  "id": 951,
                  "nodeType": "Return",
                  "src": "4034:11:3"
                }
              ]
            },
            "documentation": {
              "id": 904,
              "nodeType": "StructuredDocumentation",
              "src": "3391:293:3",
              "text": "@notice Transfer tokens from one address to another\n@param _from The address which you want to send tokens from\n@param _to The address which you want to transfer to\n@param _value The amount of tokens to be transferred\n@return Success boolean"
            },
            "functionSelector": "23b872dd",
            "id": 953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 953,
                  "src": "3720:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3720:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 953,
                  "src": "3743:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 953,
                  "src": "3764:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3764:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3710:74:3"
            },
            "returnParameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 953,
                  "src": "3817:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3816:6:3"
            },
            "scope": 954,
            "src": "3689:363:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 955,
        "src": "252:3803:3"
      }
    ],
    "src": "0:4056:3"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516109a73803806109a78339818101604052608081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b5060409081526020828101519290910151865192945092506101af9160019187019061022a565b5082516101c390600090602086019061022a565b506002829055600381905533600081815260046020908152604080832085905580519283529082019290925280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050506102bd565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026b57805160ff1916838001178555610298565b82800160010185558215610298579182015b8281111561029857825182559160200191906001019061027d565b506102a49291506102a8565b5090565b5b808211156102a457600081556001016102a9565b6106db806102cc6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146101a557806370a08231146101ad57806395d89b41146101d3578063a9059cbb146101db578063dd62ed3e1461020757610093565b806306fdde0314610098578063095ea7b31461011557806318160ddd1461015557806323b872dd1461016f575b600080fd5b6100a0610235565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101416004803603604081101561012b57600080fd5b506001600160a01b0381351690602001356102c2565b604080519115158252519081900360200190f35b61015d610333565b60408051918252519081900360200190f35b6101416004803603606081101561018557600080fd5b506001600160a01b03813581169160208101359091169060400135610339565b61015d610411565b61015d600480360360208110156101c357600080fd5b50356001600160a01b0316610417565b6100a0610432565b610141600480360360408110156101f157600080fd5b506001600160a01b03813516906020013561048d565b61015d6004803603604081101561021d57600080fd5b506001600160a01b03813581169160200135166104a3565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ba5780601f1061028f576101008083540402835291602001916102ba565b820191906000526020600020905b81548152906001019060200180831161029d57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a150600192915050565b60035481565b6001600160a01b03831660009081526005602090815260408083203384529091528120548211156103aa576040805162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015290519081900360640190fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020546103d890836104ce565b6001600160a01b038516600090815260056020908152604080832033845290915290205561040784848461052b565b5060019392505050565b60025481565b6001600160a01b031660009081526004602052604090205490565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ba5780601f1061028f576101008083540402835291602001916102ba565b600061049a33848461052b565b50600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b600082821115610525576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b03831660009081526004602052604090205481111561058f576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6001600160a01b0383166000908152600460205260409020546105b290826104ce565b6001600160a01b0380851660009081526004602052604080822093909355908416815220546105e19082610644565b6001600160a01b0380841660008181526004602090815260409182902094909455805192871683529282015280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050565b60008282018381101561069e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea2646970667358221220c3367be0d2b6166eebbc087a3126467bb6c1fb76b050be7778a44f09ddad0bb064736f6c634300060c0033",
  "bytecodeSha1": "0d5bf89119459d201a87f56b0c6b0fea7684ad57",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "Token",
  "coverageMap": {
    "branches": {
      "3": {
        "Token._transfer": {
          "19": [
            2832,
            2857,
            true
          ]
        },
        "Token.transferFrom": {
          "18": [
            3845,
            3881,
            true
          ]
        }
      },
      "8": {
        "SafeMath.add": {
          "21": [
            430,
            436,
            true
          ]
        },
        "SafeMath.sub": {
          "20": [
            850,
            856,
            true
          ]
        }
      }
    },
    "statements": {
      "3": {
        "Token._transfer": {
          "12": [
            2824,
            2882
          ],
          "13": [
            2892,
            2937
          ],
          "14": [
            2947,
            2988
          ],
          "15": [
            2998,
            3031
          ]
        },
        "Token.allowance": {
          "10": [
            1750,
            1782
          ]
        },
        "Token.approve": {
          "0": [
            2563,
            2601
          ],
          "1": [
            2611,
            2654
          ],
          "2": [
            2664,
            2675
          ]
        },
        "Token.balanceOf": {
          "7": [
            1280,
            1303
          ]
        },
        "Token.transfer": {
          "8": [
            3323,
            3357
          ],
          "9": [
            3367,
            3378
          ]
        },
        "Token.transferFrom": {
          "3": [
            3837,
            3908
          ],
          "4": [
            3918,
            3985
          ],
          "5": [
            3995,
            4024
          ],
          "6": [
            4034,
            4045
          ]
        }
      },
      "8": {
        "SafeMath.add": {
          "16": [
            422,
            468
          ],
          "17": [
            479,
            487
          ]
        },
        "SafeMath.sub": {
          "11": [
            842,
            891
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146101a557806370a08231146101ad57806395d89b41146101d3578063a9059cbb146101db578063dd62ed3e1461020757610093565b806306fdde0314610098578063095ea7b31461011557806318160ddd1461015557806323b872dd1461016f575b600080fd5b6100a0610235565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100da5781810151838201526020016100c2565b50505050905090810190601f1680156101075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101416004803603604081101561012b57600080fd5b506001600160a01b0381351690602001356102c2565b604080519115158252519081900360200190f35b61015d610333565b60408051918252519081900360200190f35b6101416004803603606081101561018557600080fd5b506001600160a01b03813581169160208101359091169060400135610339565b61015d610411565b61015d600480360360208110156101c357600080fd5b50356001600160a01b0316610417565b6100a0610432565b610141600480360360408110156101f157600080fd5b506001600160a01b03813516906020013561048d565b61015d6004803603604081101561021d57600080fd5b506001600160a01b03813581169160200135166104a3565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ba5780601f1061028f576101008083540402835291602001916102ba565b820191906000526020600020905b81548152906001019060200180831161029d57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a150600192915050565b60035481565b6001600160a01b03831660009081526005602090815260408083203384529091528120548211156103aa576040805162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015290519081900360640190fd5b6001600160a01b03841660009081526005602090815260408083203384529091529020546103d890836104ce565b6001600160a01b038516600090815260056020908152604080832033845290915290205561040784848461052b565b5060019392505050565b60025481565b6001600160a01b031660009081526004602052604090205490565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102ba5780601f1061028f576101008083540402835291602001916102ba565b600061049a33848461052b565b50600192915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b600082821115610525576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b03831660009081526004602052604090205481111561058f576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6001600160a01b0383166000908152600460205260409020546105b290826104ce565b6001600160a01b0380851660009081526004602052604080822093909355908416815220546105e19082610644565b6001600160a01b0380841660008181526004602090815260409182902094909455805192871683529282015280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050565b60008282018381101561069e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea2646970667358221220c3367be0d2b6166eebbc087a3126467bb6c1fb76b050be7778a44f09ddad0bb064736f6c634300060c0033",
  "deployedSourceMap": "252:3803:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;333:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2480:202;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2480:202:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;386:26;;;:::i;:::-;;;;;;;;;;;;;;;;3689:363;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3689:363:3;;;;;;;;;;;;;;;;;:::i;357:23::-;;;:::i;1205:105::-;;;;;;;;;;;;;;;;-1:-1:-1;1205:105:3;-1:-1:-1;;;;;1205:105:3;;:::i;307:20::-;;;:::i;3244:141::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3244:141:3;;;;;;;;:::i;1607:182::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1607:182:3;;;;;;;;;;:::i;333:18::-;;;;;;;;;;;;;;;-1:-1:-1;;333:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2480:202::-;2571:10;2547:4;2563:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2563:29:3;;;;;;;;;;;:38;;;2616;;;;;;;;;;;;;;;;;;;2547:4;;2616:38;;;;;;;;;;-1:-1:-1;2671:4:3;2480:202;;;;:::o;386:26::-;;;;:::o;3689:363::-;-1:-1:-1;;;;;3845:14:3;;3817:4;3845:14;;;:7;:14;;;;;;;;3860:10;3845:26;;;;;;;;:36;-1:-1:-1;3845:36:3;3837:71;;;;;-1:-1:-1;;;3837:71:3;;;;;;;;;;;;-1:-1:-1;;;3837:71:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;3947:14:3;;;;;;:7;:14;;;;;;;;3962:10;3947:26;;;;;;;;:38;;3978:6;3947:30;:38::i;:::-;-1:-1:-1;;;;;3918:14:3;;;;;;:7;:14;;;;;;;;3933:10;3918:26;;;;;;;:67;3995:29;3926:5;4012:3;4017:6;3995:9;:29::i;:::-;-1:-1:-1;4041:4:3;3689:363;;;;;:::o;357:23::-;;;;:::o;1205:105::-;-1:-1:-1;;;;;1287:16:3;1261:7;1287:16;;;:8;:16;;;;;;;1205:105::o;307:20::-;;;;;;;;;;;;;;;-1:-1:-1;;307:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3244:141;3307:4;3323:34;3333:10;3345:3;3350:6;3323:9;:34::i;:::-;-1:-1:-1;3374:4:3;3244:141;;;;:::o;1607:182::-;-1:-1:-1;;;;;1757:15:3;;;1727:7;1757:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;1607:182::o;765:179:8:-;823:7;855:1;850;:6;;842:49;;;;;-1:-1:-1;;;842:49:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;913:5:8;;;765:179::o;2742:296:3:-;-1:-1:-1;;;;;2832:15:3;;;;;;:8;:15;;;;;;:25;-1:-1:-1;2832:25:3;2824:58;;;;;-1:-1:-1;;;2824:58:3;;;;;;;;;;;;-1:-1:-1;;;2824:58:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;2910:15:3;;;;;;:8;:15;;;;;;:27;;2930:6;2910:19;:27::i;:::-;-1:-1:-1;;;;;2892:15:3;;;;;;;:8;:15;;;;;;:45;;;;2963:13;;;;;;;:25;;2981:6;2963:17;:25::i;:::-;-1:-1:-1;;;;;2947:13:3;;;;;;;:8;:13;;;;;;;;;:41;;;;3003:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;2742:296;;;:::o;318:176:8:-;376:7;407:5;;;430:6;;;;422:46;;;;;-1:-1:-1;;;422:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;486:1;318:176;-1:-1:-1;;;318:176:8:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "notice": "Getter to check the amount of tokens that an owner allowed to a spender",
        "params": {
          "_owner": "The address which owns the funds",
          "_spender": "The address which will spend the funds"
        },
        "returns": {
          "_0": "The amount of tokens still available for the spender"
        }
      },
      "approve(address,uint256)": {
        "details": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "notice": "Approve an address to spend the specified amount of tokens on behalf of msg.sender",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "balanceOf(address)": {
        "notice": "Getter to check the current balance of an address",
        "params": {
          "_owner": "Address to query the balance of"
        },
        "returns": {
          "_0": "Token balance"
        }
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens to a specified address",
        "params": {
          "_to": "The address to transfer to",
          "_value": "The amount to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer tokens from one address to another",
        "params": {
          "_from": "The address which you want to send tokens from",
          "_to": "The address which you want to transfer to",
          "_value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      }
    },
    "notice": "Based on the ERC-20 token standard as defined at https://eips.ethereum.org/EIPS/eip-20",
    "title": "Bare-bones Token implementation",
    "version": 1
  },
  "offset": [
    252,
    4055
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x207 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x107 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x339 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x411 JUMP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x417 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x432 JUMP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x48D JUMP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP2 ADD DUP5 SWAP1 MSTORE MLOAD SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3D8 SWAP1 DUP4 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x407 DUP5 DUP5 DUP5 PUSH2 0x52B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A CALLER DUP5 DUP5 PUSH2 0x52B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x525 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5B2 SWAP1 DUP3 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5E1 SWAP1 DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP3 DUP8 AND DUP4 MSTORE SWAP3 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 CALLDATASIZE PUSH28 0xE0D2B6166EEBBC087A3126467BB6C1FB76B050BE7778A44F09DDAD0B 0xB0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        252,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "38": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "49": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A5"
    },
    "53": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AD"
    },
    "64": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D3"
    },
    "75": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DB"
    },
    "86": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x207"
    },
    "97": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93"
    },
    "101": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMP",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "109": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "120": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x115"
    },
    "124": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18160DDD"
    },
    "131": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155"
    },
    "135": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "142": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16F"
    },
    "146": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        252,
        4055
      ],
      "op": "REVERT",
      "path": "3"
    },
    "152": {
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0"
    },
    "156": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235"
    },
    "159": {
      "fn": null,
      "jump": "i",
      "offset": [
        333,
        351
      ],
      "op": "JUMP",
      "path": "3"
    },
    "160": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "163": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "165": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "167": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "168": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "169": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "171": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "176": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "177": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "178": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "180": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "182": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP6",
      "path": "3"
    },
    "187": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "188": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "189": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "191": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "194": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "LT",
      "path": "3"
    },
    "198": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "199": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA"
    },
    "202": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "204": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "205": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "206": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "209": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "210": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "213": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2"
    },
    "217": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "JUMP",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "220": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "224": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "225": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "226": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "227": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "228": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "229": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "231": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "AND",
      "path": "3"
    },
    "232": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "233": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x107"
    },
    "237": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "238": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "239": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "240": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SUB",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "242": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "243": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "245": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "248": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SUB",
      "path": "3"
    },
    "249": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "252": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "EXP",
      "path": "3"
    },
    "253": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SUB",
      "path": "3"
    },
    "254": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "NOT",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "AND",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "258": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "260": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "261": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "262": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "263": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "264": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "265": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "266": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "269": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "271": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "272": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "273": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "274": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SUB",
      "path": "3"
    },
    "275": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "276": {
      "fn": null,
      "offset": [
        333,
        351
      ],
      "op": "RETURN",
      "path": "3"
    },
    "277": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "278": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141"
    },
    "281": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "283": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "DUP1",
      "path": "3"
    },
    "284": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "285": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SUB",
      "path": "3"
    },
    "286": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "288": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "DUP2",
      "path": "3"
    },
    "289": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "LT",
      "path": "3"
    },
    "290": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "291": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B"
    },
    "294": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "295": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "297": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "DUP1",
      "path": "3"
    },
    "298": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "REVERT",
      "path": "3"
    },
    "299": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "300": {
      "op": "POP"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "307": {
      "op": "SHL"
    },
    "308": {
      "op": "SUB"
    },
    "309": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "DUP2",
      "path": "3"
    },
    "310": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "311": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "AND",
      "path": "3"
    },
    "312": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "313": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "315": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "ADD",
      "path": "3"
    },
    "316": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "317": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C2"
    },
    "320": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        2480,
        2682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "321": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "322": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "324": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "DUP1",
      "path": "3"
    },
    "325": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "326": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "327": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "328": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "329": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "DUP3",
      "path": "3"
    },
    "330": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "331": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "332": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "333": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "DUP2",
      "path": "3"
    },
    "334": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "335": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SUB",
      "path": "3"
    },
    "336": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "338": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "ADD",
      "path": "3"
    },
    "339": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "340": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "RETURN",
      "path": "3"
    },
    "341": {
      "offset": [
        386,
        412
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "342": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D"
    },
    "345": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x333"
    },
    "348": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        386,
        412
      ],
      "op": "JUMP",
      "path": "3"
    },
    "349": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "350": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "352": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "DUP1",
      "path": "3"
    },
    "353": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "354": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "355": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "DUP3",
      "path": "3"
    },
    "356": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "357": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "358": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "359": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "DUP2",
      "path": "3"
    },
    "360": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "361": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "SUB",
      "path": "3"
    },
    "362": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "364": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "ADD",
      "path": "3"
    },
    "365": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "366": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "RETURN",
      "path": "3"
    },
    "367": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "368": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141"
    },
    "371": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "373": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "DUP1",
      "path": "3"
    },
    "374": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "375": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "SUB",
      "path": "3"
    },
    "376": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "378": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "DUP2",
      "path": "3"
    },
    "379": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "LT",
      "path": "3"
    },
    "380": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "381": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185"
    },
    "384": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "385": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "387": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "DUP1",
      "path": "3"
    },
    "388": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "REVERT",
      "path": "3"
    },
    "389": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "DUP2",
      "path": "3"
    },
    "400": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "401": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "DUP2",
      "path": "3"
    },
    "402": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "AND",
      "path": "3"
    },
    "403": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "404": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "406": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "DUP2",
      "path": "3"
    },
    "407": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "ADD",
      "path": "3"
    },
    "408": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "409": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "410": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "411": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "AND",
      "path": "3"
    },
    "412": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "413": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "415": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "ADD",
      "path": "3"
    },
    "416": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "417": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x339"
    },
    "420": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3689,
        4052
      ],
      "op": "JUMP",
      "path": "3"
    },
    "421": {
      "offset": [
        357,
        380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "422": {
      "fn": "Token.transferFrom",
      "offset": [
        357,
        380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D"
    },
    "425": {
      "fn": "Token.transferFrom",
      "offset": [
        357,
        380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x411"
    },
    "428": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        357,
        380
      ],
      "op": "JUMP",
      "path": "3"
    },
    "429": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "430": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D"
    },
    "433": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "435": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "DUP1",
      "path": "3"
    },
    "436": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "437": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "SUB",
      "path": "3"
    },
    "438": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "440": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "DUP2",
      "path": "3"
    },
    "441": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "LT",
      "path": "3"
    },
    "442": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "443": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C3"
    },
    "446": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "447": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "449": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "DUP1",
      "path": "3"
    },
    "450": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "REVERT",
      "path": "3"
    },
    "451": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "452": {
      "op": "POP"
    },
    "453": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "460": {
      "op": "SHL"
    },
    "461": {
      "op": "SUB"
    },
    "462": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "AND",
      "path": "3"
    },
    "463": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x417"
    },
    "466": {
      "fn": "Token.balanceOf",
      "jump": "i",
      "offset": [
        1205,
        1310
      ],
      "op": "JUMP",
      "path": "3"
    },
    "467": {
      "offset": [
        307,
        327
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "468": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0"
    },
    "471": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x432"
    },
    "474": {
      "fn": "Token.balanceOf",
      "jump": "i",
      "offset": [
        307,
        327
      ],
      "op": "JUMP",
      "path": "3"
    },
    "475": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "476": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x141"
    },
    "479": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "481": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "DUP1",
      "path": "3"
    },
    "482": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "483": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "SUB",
      "path": "3"
    },
    "484": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "486": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "DUP2",
      "path": "3"
    },
    "487": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "LT",
      "path": "3"
    },
    "488": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "489": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F1"
    },
    "492": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "493": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "495": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "DUP1",
      "path": "3"
    },
    "496": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "REVERT",
      "path": "3"
    },
    "497": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "505": {
      "op": "SHL"
    },
    "506": {
      "op": "SUB"
    },
    "507": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "DUP2",
      "path": "3"
    },
    "508": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "509": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "AND",
      "path": "3"
    },
    "510": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "511": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "513": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "ADD",
      "path": "3"
    },
    "514": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "515": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48D"
    },
    "518": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3244,
        3385
      ],
      "op": "JUMP",
      "path": "3"
    },
    "519": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "520": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D"
    },
    "523": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "525": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "526": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "527": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "SUB",
      "path": "3"
    },
    "528": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "530": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "531": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "LT",
      "path": "3"
    },
    "532": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "533": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21D"
    },
    "536": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "537": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "539": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "540": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "REVERT",
      "path": "3"
    },
    "541": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "542": {
      "op": "POP"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "552": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "553": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "554": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "AND",
      "path": "3"
    },
    "555": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "556": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "558": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "ADD",
      "path": "3"
    },
    "559": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "560": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "AND",
      "path": "3"
    },
    "561": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A3"
    },
    "564": {
      "fn": "Token.allowance",
      "jump": "i",
      "offset": [
        1607,
        1789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "565": {
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "566": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "568": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "569": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "570": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "572": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "573": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "574": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "576": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "578": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP5",
      "path": "3"
    },
    "579": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP7",
      "path": "3"
    },
    "580": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "AND",
      "path": "3"
    },
    "581": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "582": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "585": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MUL",
      "path": "3"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "588": {
      "op": "NOT"
    },
    "589": {
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "590": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "591": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "592": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "AND",
      "path": "3"
    },
    "593": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "594": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "595": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "596": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DIV",
      "path": "3"
    },
    "597": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "599": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "600": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "601": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP5",
      "path": "3"
    },
    "602": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "603": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DIV",
      "path": "3"
    },
    "604": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP5",
      "path": "3"
    },
    "605": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MUL",
      "path": "3"
    },
    "606": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "607": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "608": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP5",
      "path": "3"
    },
    "609": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "610": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "611": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "612": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "613": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "614": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "615": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "616": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "617": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "618": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "619": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "620": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "621": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "622": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "623": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "624": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA"
    },
    "627": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "628": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "629": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "631": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "LT",
      "path": "3"
    },
    "632": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28F"
    },
    "635": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "636": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "639": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "640": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "641": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "642": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DIV",
      "path": "3"
    },
    "643": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MUL",
      "path": "3"
    },
    "644": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "645": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "646": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "647": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "649": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "650": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "651": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA"
    },
    "654": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "JUMP",
      "path": "3"
    },
    "655": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "656": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "657": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "658": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "659": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "660": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "662": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "663": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "665": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "667": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "668": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "669": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "670": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "671": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "672": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "673": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "674": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "675": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "677": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "678": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "679": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "681": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "682": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP1",
      "path": "3"
    },
    "683": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP4",
      "path": "3"
    },
    "684": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "GT",
      "path": "3"
    },
    "685": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D"
    },
    "688": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "689": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "690": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "691": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SUB",
      "path": "3"
    },
    "692": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "694": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "AND",
      "path": "3"
    },
    "695": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP3",
      "path": "3"
    },
    "696": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "ADD",
      "path": "3"
    },
    "697": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "698": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "699": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "700": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "701": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "702": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "703": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "POP",
      "path": "3"
    },
    "704": {
      "fn": "Token.allowance",
      "offset": [
        333,
        351
      ],
      "op": "DUP2",
      "path": "3"
    },
    "705": {
      "fn": "Token.allowance",
      "jump": "o",
      "offset": [
        333,
        351
      ],
      "op": "JUMP",
      "path": "3"
    },
    "706": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "707": {
      "fn": "Token.approve",
      "offset": [
        2571,
        2581
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 0
    },
    "708": {
      "fn": "Token.approve",
      "offset": [
        2547,
        2551
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "710": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "DUP2",
      "path": "3"
    },
    "711": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "DUP2",
      "path": "3"
    },
    "712": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "713": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "715": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "717": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "718": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "DUP2",
      "path": "3"
    },
    "719": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "720": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "722": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "DUP1",
      "path": "3"
    },
    "723": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "DUP4",
      "path": "3"
    },
    "724": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2582
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "731": {
      "op": "SHL"
    },
    "732": {
      "op": "SUB"
    },
    "733": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "DUP8",
      "path": "3"
    },
    "734": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "AND",
      "path": "3"
    },
    "735": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "DUP1",
      "path": "3"
    },
    "736": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "DUP6",
      "path": "3"
    },
    "737": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "738": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "739": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "DUP4",
      "path": "3"
    },
    "740": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "741": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "742": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "DUP5",
      "path": "3"
    },
    "743": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2592
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "744": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2601
      ],
      "op": "DUP7",
      "path": "3"
    },
    "745": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "746": {
      "fn": "Token.approve",
      "offset": [
        2563,
        2601
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "747": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 1
    },
    "748": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "749": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "750": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "DUP6",
      "path": "3"
    },
    "751": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "752": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "753": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "DUP5",
      "path": "3"
    },
    "754": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "ADD",
      "path": "3"
    },
    "755": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "756": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "757": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "758": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "759": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "760": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "761": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "ADD",
      "path": "3"
    },
    "762": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "DUP5",
      "path": "3"
    },
    "763": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "764": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "765": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "766": {
      "fn": "Token.approve",
      "offset": [
        2547,
        2551
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "767": {
      "fn": "Token.approve",
      "offset": [
        2547,
        2551
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "768": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "801": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "802": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "803": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "804": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "805": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SUB",
      "path": "3"
    },
    "806": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "808": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "ADD",
      "path": "3"
    },
    "809": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "810": {
      "fn": "Token.approve",
      "offset": [
        2616,
        2654
      ],
      "op": "LOG1",
      "path": "3"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "fn": "Token.approve",
      "offset": [
        2671,
        2675
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "814": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "815": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "816": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "POP",
      "path": "3"
    },
    "817": {
      "fn": "Token.approve",
      "offset": [
        2480,
        2682
      ],
      "op": "POP",
      "path": "3"
    },
    "818": {
      "fn": "Token.approve",
      "jump": "o",
      "offset": [
        2480,
        2682
      ],
      "op": "JUMP",
      "path": "3"
    },
    "819": {
      "offset": [
        386,
        412
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "820": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "822": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "823": {
      "fn": "Token.approve",
      "offset": [
        386,
        412
      ],
      "op": "DUP2",
      "path": "3"
    },
    "824": {
      "fn": "Token.approve",
      "jump": "o",
      "offset": [
        386,
        412
      ],
      "op": "JUMP",
      "path": "3"
    },
    "825": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "op": "SUB"
    },
    "834": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 3
    },
    "835": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "AND",
      "path": "3"
    },
    "836": {
      "fn": "Token.transferFrom",
      "offset": [
        3817,
        3821
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "838": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "839": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "DUP2",
      "path": "3"
    },
    "840": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "841": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3852
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "843": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "845": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "846": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "DUP2",
      "path": "3"
    },
    "847": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "848": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "850": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "DUP1",
      "path": "3"
    },
    "851": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "DUP4",
      "path": "3"
    },
    "852": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3859
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "853": {
      "fn": "Token.transferFrom",
      "offset": [
        3860,
        3870
      ],
      "op": "CALLER",
      "path": "3"
    },
    "854": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "DUP5",
      "path": "3"
    },
    "855": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "856": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "857": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "858": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "859": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "DUP2",
      "path": "3"
    },
    "860": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "861": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3871
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "862": {
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3881
      ],
      "op": "DUP3",
      "path": "3"
    },
    "863": {
      "op": "GT"
    },
    "864": {
      "branch": 18,
      "fn": "Token.transferFrom",
      "offset": [
        3845,
        3881
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "865": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3AA"
    },
    "868": {
      "branch": 18,
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "869": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "871": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "DUP1",
      "path": "3"
    },
    "872": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "DUP2",
      "path": "3"
    },
    "881": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "882": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "884": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "886": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "DUP3",
      "path": "3"
    },
    "887": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "ADD",
      "path": "3"
    },
    "888": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "889": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "891": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "893": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "DUP3",
      "path": "3"
    },
    "894": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "ADD",
      "path": "3"
    },
    "895": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "896": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "924": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "DUP3",
      "path": "3"
    },
    "925": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "ADD",
      "path": "3"
    },
    "926": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "927": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "928": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "929": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "930": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "DUP2",
      "path": "3"
    },
    "931": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "932": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "SUB",
      "path": "3"
    },
    "933": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "935": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "ADD",
      "path": "3"
    },
    "936": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "937": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "REVERT",
      "path": "3"
    },
    "938": {
      "fn": "Token.transferFrom",
      "offset": [
        3837,
        3908
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 4
    },
    "948": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "AND",
      "path": "3"
    },
    "949": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "951": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "952": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "DUP2",
      "path": "3"
    },
    "953": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "954": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3954
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "956": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "958": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "959": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "DUP2",
      "path": "3"
    },
    "960": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "961": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "963": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "DUP1",
      "path": "3"
    },
    "964": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "DUP4",
      "path": "3"
    },
    "965": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3961
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "966": {
      "fn": "Token.transferFrom",
      "offset": [
        3962,
        3972
      ],
      "op": "CALLER",
      "path": "3"
    },
    "967": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "DUP5",
      "path": "3"
    },
    "968": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "969": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "970": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "971": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "972": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "973": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "974": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3973
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "975": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3985
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D8"
    },
    "978": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3985
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "979": {
      "fn": "Token.transferFrom",
      "offset": [
        3978,
        3984
      ],
      "op": "DUP4",
      "path": "3"
    },
    "980": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3977
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CE"
    },
    "983": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3947,
        3985
      ],
      "op": "JUMP",
      "path": "3"
    },
    "984": {
      "fn": "Token.transferFrom",
      "offset": [
        3947,
        3985
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "DUP6",
      "path": "3"
    },
    "994": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "AND",
      "path": "3"
    },
    "995": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "997": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "998": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "DUP2",
      "path": "3"
    },
    "999": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1000": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1002": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1004": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1005": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1006": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1007": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1009": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1010": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1011": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3932
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1012": {
      "fn": "Token.transferFrom",
      "offset": [
        3933,
        3943
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1013": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3944
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1014": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3944
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1015": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1016": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3944
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1017": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3944
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1018": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1019": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3944
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1020": {
      "fn": "Token.transferFrom",
      "offset": [
        3918,
        3985
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1021": {
      "fn": "Token.transferFrom",
      "offset": [
        3995,
        4024
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x407"
    },
    "1024": {
      "fn": "Token.transferFrom",
      "offset": [
        3926,
        3931
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1025": {
      "fn": "Token.transferFrom",
      "offset": [
        4012,
        4015
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1026": {
      "fn": "Token.transferFrom",
      "offset": [
        4017,
        4023
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1027": {
      "fn": "Token.transferFrom",
      "offset": [
        3995,
        4004
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52B"
    },
    "1030": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3995,
        4024
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1031": {
      "fn": "Token.transferFrom",
      "offset": [
        3995,
        4024
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "fn": "Token.transferFrom",
      "offset": [
        4041,
        4045
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x1"
    },
    "1035": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1036": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1037": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "POP",
      "path": "3"
    },
    "1038": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "POP",
      "path": "3"
    },
    "1039": {
      "fn": "Token.transferFrom",
      "offset": [
        3689,
        4052
      ],
      "op": "POP",
      "path": "3"
    },
    "1040": {
      "fn": "Token.transferFrom",
      "jump": "o",
      "offset": [
        3689,
        4052
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1041": {
      "offset": [
        357,
        380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1042": {
      "fn": "Token.transferFrom",
      "offset": [
        357,
        380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1044": {
      "fn": "Token.transferFrom",
      "offset": [
        357,
        380
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1045": {
      "fn": "Token.transferFrom",
      "offset": [
        357,
        380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1046": {
      "fn": "Token.transferFrom",
      "jump": "o",
      "offset": [
        357,
        380
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1047": {
      "fn": "Token.balanceOf",
      "offset": [
        1205,
        1310
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "SUB"
    },
    "1056": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "AND",
      "path": "3",
      "statement": 7
    },
    "1057": {
      "fn": "Token.balanceOf",
      "offset": [
        1261,
        1268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1059": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1060": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1061": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1062": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1064": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1066": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1067": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1069": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1070": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1071": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1072": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1303
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1073": {
      "fn": "Token.balanceOf",
      "jump": "o",
      "offset": [
        1205,
        1310
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1074": {
      "offset": [
        307,
        327
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1075": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1077": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1078": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1079": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1081": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1082": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1083": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1085": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1087": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1089": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1090": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "AND",
      "path": "3"
    },
    "1091": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1092": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1095": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "MUL",
      "path": "3"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1098": {
      "op": "NOT"
    },
    "1099": {
      "offset": [
        307,
        327
      ],
      "op": "ADD",
      "path": "3"
    },
    "1100": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1101": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1102": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "AND",
      "path": "3"
    },
    "1103": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1104": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1105": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1106": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DIV",
      "path": "3"
    },
    "1107": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1109": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1110": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "ADD",
      "path": "3"
    },
    "1111": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1112": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1113": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DIV",
      "path": "3"
    },
    "1114": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1115": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "MUL",
      "path": "3"
    },
    "1116": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1117": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "ADD",
      "path": "3"
    },
    "1118": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1119": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "ADD",
      "path": "3"
    },
    "1120": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1121": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1122": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1123": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1124": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1125": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1126": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1127": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1128": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1129": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "ADD",
      "path": "3"
    },
    "1130": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1131": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1132": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1133": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1134": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA"
    },
    "1137": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1138": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1139": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1141": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "LT",
      "path": "3"
    },
    "1142": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x28F"
    },
    "1145": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1146": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1149": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1150": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1151": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1152": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DIV",
      "path": "3"
    },
    "1153": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "MUL",
      "path": "3"
    },
    "1154": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1155": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1156": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1157": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1159": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "ADD",
      "path": "3"
    },
    "1160": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1161": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BA"
    },
    "1164": {
      "fn": "Token.balanceOf",
      "offset": [
        307,
        327
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1165": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1166": {
      "fn": "Token.transfer",
      "offset": [
        3307,
        3311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1168": {
      "fn": "Token.transfer",
      "offset": [
        3323,
        3357
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x49A"
    },
    "1171": {
      "fn": "Token.transfer",
      "offset": [
        3333,
        3343
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1172": {
      "fn": "Token.transfer",
      "offset": [
        3345,
        3348
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1173": {
      "fn": "Token.transfer",
      "offset": [
        3350,
        3356
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1174": {
      "fn": "Token.transfer",
      "offset": [
        3323,
        3332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52B"
    },
    "1177": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3323,
        3357
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1178": {
      "fn": "Token.transfer",
      "offset": [
        3323,
        3357
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "fn": "Token.transfer",
      "offset": [
        3374,
        3378
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x1"
    },
    "1182": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1183": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1184": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "POP",
      "path": "3"
    },
    "1185": {
      "fn": "Token.transfer",
      "offset": [
        3244,
        3385
      ],
      "op": "POP",
      "path": "3"
    },
    "1186": {
      "fn": "Token.transfer",
      "jump": "o",
      "offset": [
        3244,
        3385
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1187": {
      "fn": "Token.allowance",
      "offset": [
        1607,
        1789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "SUB"
    },
    "1196": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 10
    },
    "1197": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1198": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "AND",
      "path": "3"
    },
    "1199": {
      "fn": "Token.allowance",
      "offset": [
        1727,
        1734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1201": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1202": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1203": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1204": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1764
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1206": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1208": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1209": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1210": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1211": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1213": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1214": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1215": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1772
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1216": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1217": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1218": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1219": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "AND",
      "path": "3"
    },
    "1220": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1221": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1222": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1223": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1224": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1225": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1226": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1227": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1228": {
      "fn": "Token.allowance",
      "offset": [
        1757,
        1782
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1229": {
      "fn": "Token.allowance",
      "jump": "o",
      "offset": [
        1607,
        1789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1230": {
      "fn": "SafeMath.sub",
      "offset": [
        765,
        944
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1231": {
      "fn": "SafeMath.sub",
      "offset": [
        823,
        830
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1233": {
      "fn": "SafeMath.sub",
      "offset": [
        855,
        856
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 11
    },
    "1234": {
      "fn": "SafeMath.sub",
      "offset": [
        850,
        851
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1235": {
      "fn": "SafeMath.sub",
      "offset": [
        850,
        856
      ],
      "op": "GT",
      "path": "8"
    },
    "1236": {
      "branch": 20,
      "fn": "SafeMath.sub",
      "offset": [
        850,
        856
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1237": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x525"
    },
    "1240": {
      "branch": 20,
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1241": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1243": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1244": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1253": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1254": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1256": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1258": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1259": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "ADD",
      "path": "8"
    },
    "1260": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1261": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1E"
    },
    "1263": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1265": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1266": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "ADD",
      "path": "8"
    },
    "1267": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1268": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "1301": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "1303": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1304": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "ADD",
      "path": "8"
    },
    "1305": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1306": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1307": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1308": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1309": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1310": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1311": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "SUB",
      "path": "8"
    },
    "1312": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "1314": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "ADD",
      "path": "8"
    },
    "1315": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1316": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1317": {
      "fn": "SafeMath.sub",
      "offset": [
        842,
        891
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "fn": "SafeMath.sub",
      "offset": [
        913,
        918
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1320": {
      "fn": "SafeMath.sub",
      "offset": [
        913,
        918
      ],
      "op": "SUB",
      "path": "8"
    },
    "1321": {
      "fn": "SafeMath.sub",
      "offset": [
        913,
        918
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1322": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        765,
        944
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1323": {
      "fn": "Token._transfer",
      "offset": [
        2742,
        3038
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "op": "SUB"
    },
    "1332": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 12
    },
    "1333": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "AND",
      "path": "3"
    },
    "1334": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1336": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1337": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1338": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1339": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2840
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1341": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1343": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1344": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1346": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1347": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1348": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2847
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1349": {
      "fn": "Token._transfer",
      "offset": [
        2832,
        2857
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1350": {
      "op": "GT"
    },
    "1351": {
      "branch": 19,
      "fn": "Token._transfer",
      "offset": [
        2832,
        2857
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1352": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58F"
    },
    "1355": {
      "branch": 19,
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1356": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1358": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1359": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1360": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1368": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1369": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1371": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1373": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1374": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "ADD",
      "path": "3"
    },
    "1375": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1376": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "1378": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1380": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1381": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "ADD",
      "path": "3"
    },
    "1382": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1383": {
      "op": "PUSH20",
      "value": "0x496E73756666696369656E742062616C616E6365"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1409": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1410": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "ADD",
      "path": "3"
    },
    "1411": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1412": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1413": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1414": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1415": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1416": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1417": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "SUB",
      "path": "3"
    },
    "1418": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1420": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "ADD",
      "path": "3"
    },
    "1421": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1422": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1423": {
      "fn": "Token._transfer",
      "offset": [
        2824,
        2882
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "SUB"
    },
    "1432": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 13
    },
    "1433": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "AND",
      "path": "3"
    },
    "1434": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1436": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1437": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1438": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1439": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1441": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1443": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1444": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1446": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1447": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1448": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2925
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1449": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2937
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B2"
    },
    "1452": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2937
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1453": {
      "fn": "Token._transfer",
      "offset": [
        2930,
        2936
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1454": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2929
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CE"
    },
    "1457": {
      "fn": "Token._transfer",
      "jump": "i",
      "offset": [
        2910,
        2937
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1458": {
      "fn": "Token._transfer",
      "offset": [
        2910,
        2937
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1468": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1469": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "AND",
      "path": "3"
    },
    "1470": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1472": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1473": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1474": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1475": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1477": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1479": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1480": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1482": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1483": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1484": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2907
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1485": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2937
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1486": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2937
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1487": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2937
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1488": {
      "fn": "Token._transfer",
      "offset": [
        2892,
        2937
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1489": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2976
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 14
    },
    "1490": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2976
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1491": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2976
      ],
      "op": "AND",
      "path": "3"
    },
    "1492": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2976
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1493": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2976
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1494": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2976
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1495": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2976
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1496": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E1"
    },
    "1499": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1500": {
      "fn": "Token._transfer",
      "offset": [
        2981,
        2987
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1501": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2980
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x644"
    },
    "1504": {
      "fn": "Token._transfer",
      "jump": "i",
      "offset": [
        2963,
        2988
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1505": {
      "fn": "Token._transfer",
      "offset": [
        2963,
        2988
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1515": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1516": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "AND",
      "path": "3"
    },
    "1517": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1519": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1520": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1521": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1522": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1524": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1526": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1527": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1528": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1529": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1531": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1532": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1533": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1534": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2960
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1535": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2988
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1536": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1537": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2988
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1538": {
      "fn": "Token._transfer",
      "offset": [
        2947,
        2988
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1539": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 15
    },
    "1540": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1541": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1542": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1543": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "AND",
      "path": "3"
    },
    "1544": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1545": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1546": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1547": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1548": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "ADD",
      "path": "3"
    },
    "1549": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1550": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1551": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1552": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "ADD",
      "path": "3"
    },
    "1553": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1554": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1555": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1556": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1557": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1558": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1591": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1592": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1593": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1594": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SUB",
      "path": "3"
    },
    "1595": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1597": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "ADD",
      "path": "3"
    },
    "1598": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1599": {
      "fn": "Token._transfer",
      "offset": [
        3003,
        3031
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1600": {
      "fn": "Token._transfer",
      "offset": [
        2742,
        3038
      ],
      "op": "POP",
      "path": "3"
    },
    "1601": {
      "fn": "Token._transfer",
      "offset": [
        2742,
        3038
      ],
      "op": "POP",
      "path": "3"
    },
    "1602": {
      "fn": "Token._transfer",
      "offset": [
        2742,
        3038
      ],
      "op": "POP",
      "path": "3"
    },
    "1603": {
      "fn": "Token._transfer",
      "jump": "o",
      "offset": [
        2742,
        3038
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1604": {
      "fn": "SafeMath.add",
      "offset": [
        318,
        494
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1605": {
      "fn": "SafeMath.add",
      "offset": [
        376,
        383
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1607": {
      "fn": "SafeMath.add",
      "offset": [
        407,
        412
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1608": {
      "fn": "SafeMath.add",
      "offset": [
        407,
        412
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1609": {
      "fn": "SafeMath.add",
      "offset": [
        407,
        412
      ],
      "op": "ADD",
      "path": "8"
    },
    "1610": {
      "fn": "SafeMath.add",
      "offset": [
        430,
        436
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 16
    },
    "1611": {
      "fn": "SafeMath.add",
      "offset": [
        430,
        436
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1612": {
      "fn": "SafeMath.add",
      "offset": [
        430,
        436
      ],
      "op": "LT",
      "path": "8"
    },
    "1613": {
      "branch": 21,
      "fn": "SafeMath.add",
      "offset": [
        430,
        436
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1614": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x69E"
    },
    "1617": {
      "branch": 21,
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1618": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1620": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1621": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1630": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1631": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1633": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1635": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1636": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "ADD",
      "path": "8"
    },
    "1637": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1638": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1B"
    },
    "1640": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1642": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1643": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "ADD",
      "path": "8"
    },
    "1644": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1645": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1678": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "1680": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1681": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "ADD",
      "path": "8"
    },
    "1682": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1683": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1684": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1685": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1686": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1687": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1688": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "SUB",
      "path": "8"
    },
    "1689": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "1691": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "ADD",
      "path": "8"
    },
    "1692": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1693": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1694": {
      "fn": "SafeMath.add",
      "offset": [
        422,
        468
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1695": {
      "fn": "SafeMath.add",
      "offset": [
        486,
        487
      ],
      "op": "SWAP4",
      "path": "8",
      "statement": 17
    },
    "1696": {
      "fn": "SafeMath.add",
      "offset": [
        318,
        494
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1697": {
      "op": "POP"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        318,
        494
      ],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "231dd26df6f61f37f5d6cdcd98603402bb1a5c11",
  "source": "pragma solidity ^0.6.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"./utils/SafeMath.sol\";\n\n/**\n    @title Bare-bones Token implementation\n    @notice Based on the ERC-20 token standard as defined at\n            https://eips.ethereum.org/EIPS/eip-20\n */\ncontract Token {\n\n    using SafeMath for uint256;\n\n    string public symbol;\n    string public name;\n    uint256 public decimals;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n\n    event Transfer(address from, address to, uint256 value);\n    event Approval(address owner, address spender, uint256 value);\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _decimals,\n        uint256 _totalSupply\n    )\n        public\n    {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        totalSupply = _totalSupply;\n        balances[msg.sender] = _totalSupply;\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n\n    /**\n        @notice Getter to check the current balance of an address\n        @param _owner Address to query the balance of\n        @return Token balance\n     */\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n    /**\n        @notice Getter to check the amount of tokens that an owner allowed to a spender\n        @param _owner The address which owns the funds\n        @param _spender The address which will spend the funds\n        @return The amount of tokens still available for the spender\n     */\n    function allowance(\n        address _owner,\n        address _spender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n        @notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n        @dev Beware that changing an allowance with this method brings the risk that someone may use both the old\n             and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n             race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n             https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        @param _spender The address which will spend the funds.\n        @param _value The amount of tokens to be spent.\n        @return Success boolean\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /** shared logic for transfer and transferFrom */\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        require(balances[_from] >= _value, \"Insufficient balance\");\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n    }\n\n    /**\n        @notice Transfer tokens to a specified address\n        @param _to The address to transfer to\n        @param _value The amount to be transferred\n        @return Success boolean\n     */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n        @notice Transfer tokens from one address to another\n        @param _from The address which you want to send tokens from\n        @param _to The address which you want to transfer to\n        @param _value The amount of tokens to be transferred\n        @return Success boolean\n     */\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n        public\n        returns (bool)\n    {\n        require(allowed[_from][msg.sender] >= _value, \"Insufficient allowance\");\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n}\n",
  "sourceMap": "252:3803:3:-:0;;;652:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;652:381:3;;;;;;;;;;-1:-1:-1;652:381:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;652:381:3;;;;;;;;;;-1:-1:-1;652:381:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;652:381:3;;;;;;;;;;;;;;816:12;;652:381;;-1:-1:-1;652:381:3;-1:-1:-1;816:12:3;;:4;;:12;;;;:::i;:::-;-1:-1:-1;838:16:3;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;864:8:3;:20;;;894:11;:26;;;939:10;-1:-1:-1;930:20:3;;;:8;:20;;;;;;;;:35;;;980:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;652:381;;;;252:3803;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:3803:3;;;-1:-1:-1;252:3803:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Token.sol",
  "type": "contract"
}